{"version":3,"sources":["components/Const.js","GlobalContext.js","components/Modals/Autorization.js","functions/ServerFunctions.js","img/default.avatar.png","components/Modals/UserWindowComponents/userAvatar.js","components/Modals/UserWindowComponents/Statistic.js","components/Modals/UserWindow.js","components/Navbar/navbar.js","gamefield/questions/Question.js","gamefield/questions/Topic.js","gamefield/questions/QuestionsSection.js","gamefield/GameSection/GameSection.js","components/Avatar.js","img/HostAvatar.jpg","gamefield/host/HostSection.js","gamefield/players/PlayerIcon.js","topics/topics.js","functions/show.js","functions/changeHostText.js","gamefield/players/buttons/answerButton.js","functions/hide.js","gamefield/players/buttons/skipQuestionButton.js","functions/addToStats.js","functions/compareAnswers.js","sounds/100-k-1-wrong-answer.mp3","sounds/right-answer.mp3","functions/getRandomNumber.js","gamefield/host/rightAnswerPhrases.js","gamefield/host/wrongAnswersPhrases.js","functions/roundCompleted.js","functions/roundSkipped.js","gamefield/players/buttons/buttonsSectionLeft.js","gamefield/players/buttons/buttonsSection.js","gamefield/players/PlayersSection.js","gamefield/bottomSection/BottomSection.js","gamefield/GameField.js","gamefield/players/buttons/buttonsBlocked.js","img/github.png","img/rs_school_js.svg","components/Footer.js","functions/nullifyItems.js","App.js","reportWebVitals.js","index.js"],"names":["serverPath","loginPath","registerPath","checkSessionPath","logOutPath","updateUserPath","getAllTopicsPath","sessionToken","Context","React","createContext","DEFAULT_MESSAGE","Autorization","props","useState","isOpen","setIsOpen","windowName","isRegisterWnindow","message","setMessage","useContext","setisUserLoged","setloggedUser","loggedUser","saveToken","token","localStorage","getItem","removeItem","setItem","useEffect","closeModalHandler","e","undefined","target","document","querySelector","authorizationHandller","a","preventDefault","login","forms","RegAuthForm","elements","value","password","email","requestOptions","method","headers","body","JSON","stringify","fetch","response","json","result","status","user","Fragment","onClick","className","name","action","onSubmit","type","placeholder","required","id","updateUserOnServer","field","updateValue","path","localToken","statuts","statusCode","logOut","currentUSer","setIsUserLogedCallback","setloggedUserCallback","request","UserInfo","avatar","defaultAvatar","imgSrc","setImgSrc","file","getElementById","files","console","log","size","alert","reader","FileReader","onload","readAsDataURL","src","alt","accept","title","onChange","setAvatarhandler","Statistic","statName","statValue","UserWindow","arrOfStats","setArrOfStats","currentUser","totalAnswers","rightAnswers","wrongAnswers","calcPercentOfAnswers","numbOfAnswers","toFixed","getStatistic","map","stat","Navbar","isUserLoged","Question","question","handler","price","played","Topic","topic","topicName","topicQuestions","QuestionsSection","topics","tour","GameSection","Avatar","avatarSrc","HostSection","btns","disabled","isBlocked","currentQuestion","speechSynthesis","speak","SpeechSynthesisUtterance","readQuestion","HostAvatar","PlayerIcon","userName","setUserName","getAllTopics","ok","Error","usedTopics","getRoundRandomTopics","getRandomIndexNotInArr","fillTopicsToUse","extArr","resultArr","randomIndex","currentTopicName","listOfTopics","find","usedTopicName","length","numberOfTopics","push","NUMBER_OF_TOPICS_IN_ROUND","arr","Math","floor","random","usedIndex","topicsToUse","indexOfTopic","topicToUse","Topics","answers","show","element","classList","remove","changeHostText","text","innerHTML","AnswerButton","textArea","submitBtn","showSubmitArea","hide","add","SkipQuestionButton","setBtns","table","questionText","info","btn","skipQuestion","addToStats","answer","then","compareAnswers","string1","string2","toLine","string","trim","toLowerCase","split","join","rightAnswer","includes","getRandomInt","min","max","ceil","RightAnswerPhrases","WrongAnswerPhrases","roundCompleted","counter","parseInt","roundSkipped","ButtonsSectionLeft","setTopics","setTour","useSound","wrongAnswerSound","playWrongAnswerSound","rightAnswerSound","playRightAnswerSound","pointsInfo","points","slice","isRight","randomNumber","toString","CheckGuess","reduce","total","concat","every","item","res","ButtonsSection","PlayersSection","BottomSection","GameField","ButtonsBlocked","buttonName","Footer","href","gitLogo","RSlogo","nullifyItems","App","checLocalToken","setInterval","GlobalContext","Provider","newHostText","currentQuestionText","currentQuestionPrice","currentQuestionRightAnswer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d952a9e9.chunk.js","sourcesContent":["//  const serverPath = 'http://localhost:3005/'; //development server\nconst serverPath = 'https://rs-clone-thrvrce-demo.herokuapp.com/';// production server\n// const Consts = {\n\tconst loginPath = `${serverPath}login/authorize`;\n\tconst registerPath = `${serverPath}login/register`;\n\tconst checkSessionPath = `${serverPath}login/checkSession`;\n\tconst logOutPath = `${serverPath}login/logout`;\n\n\tconst updateUserPath = `${serverPath}login/updateUser`;\n\n\tconst getAllTopicsPath = `${serverPath}topics/getalltopics`;\n\tconst getTopicByNamePath = `${serverPath}topics/gettopicbyname`;\n\tconst insertArrayOfTopicsPath = `${serverPath}topics/posttopics`;\n\tconst deleteTopicByNamePath = `${serverPath}topics/deletetopicbyname`;\n\n\n\tconst sessionToken = 'sessionToken';\n\tconst checkSessionInterval = 1000 * 60 * 3;\n\n// }\nexport {\n\tloginPath,\n\tregisterPath,\n\tcheckSessionPath,\n\tsessionToken,\n\tlogOutPath,\n\tgetAllTopicsPath,\n\tgetTopicByNamePath,\n\tinsertArrayOfTopicsPath,\n\tdeleteTopicByNamePath,\n\tupdateUserPath,\n\tcheckSessionInterval,\n}","import React from 'react'\n\nconst Context = React.createContext();\n\nexport default Context","import React from 'react';\nimport PropTypes from 'prop-types'\nimport  {registerPath, loginPath, sessionToken} from '../Const'\nimport Context from '../../GlobalContext'\n\nconst DEFAULT_MESSAGE = 'Заполните форму';\n\nfunction Autorization(props) {\n\tconst [isOpen, setIsOpen] = React.useState(false);\n\tconst {windowName, isRegisterWnindow} = props;\n\tconst[message, setMessage] = React.useState(DEFAULT_MESSAGE);\n\tlet {setisUserLoged, loggedUser, setloggedUser} = React.useContext(Context);\n\n\tReact.useEffect(() => {\n\t\tsetMessage(DEFAULT_MESSAGE);\n\t}, [isOpen]);\n\n\tfunction saveToken (token) {\n\t\tif (localStorage.getItem(sessionToken)){\n\t\t\tlocalStorage.removeItem(sessionToken)\n\t\t}\n\n\t\tlocalStorage.setItem(sessionToken, token)\n\t}\n\n\tconst closeModalHandler = (e) => {\n\t\tif (e === undefined){\n\t\t\tsetIsOpen(false);\n\t\t} else {\n\t\t\t(e.target === document.querySelector('.modal') && setIsOpen(false));\n\t\t\t(e.target === document.querySelector('#Close') && setIsOpen(false));\n\t\t}\n\t}\n\n\tasync function authorizationHandller(e){\n\t\te.preventDefault();\n\n\t\tconst login = document.forms.RegAuthForm.elements.login.value;\n\t\tconst password = document.forms.RegAuthForm.elements.password.value;\n\n\t\tif (isRegisterWnindow) {\n\t\t\tconst email = document.forms.RegAuthForm.elements.email.value;\n\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders:{\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tlogin: login,\n\t\t\t\t\temail: email,\n\t\t\t\t\tpassword: password\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst response = await fetch(registerPath, requestOptions);\n\t\t\tconst result = await response.json();\n\n\t\t\tif (result.status){\n\t\t\t\tcloseModalHandler();\n\t\t\t\tsaveToken(result.token);\n\t\t\t\tsetloggedUser(result.user);\n\t\t\t\tsetisUserLoged(true);\n\t\t\t} else {\n\t\t\t\tsetMessage(result.message);\n\t\t\t}\n\t\t} else {\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders:{\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tlogin: login,\n\t\t\t\t\tpassword: password\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst response = await fetch(loginPath, requestOptions);\n\t\t\tconst result = await response.json();\n\n\t\t\tif (result.status){\n\t\t\t\tcloseModalHandler();\n\t\t\t\tsaveToken(result.token);\n\t\t\t\tsetloggedUser(result.user);\n\t\t\t\t// setMessage('Вход произведен!');\n\t\t\t\tsetisUserLoged(true);\n\n\t\t\t} else {\n\t\t\t\tsetMessage(result.message);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn(\n\t\t<React.Fragment>\n        <li onClick={() => setIsOpen(true)} > {windowName} </li>\n\n        {isOpen && (\n          <div className='modal' onClick ={(e)=> closeModalHandler(e) } >\n            <div className='modal-body-auth'>\n              <h1>{windowName}</h1>\n              <p>{message}</p>\n\n\t\t\t\t\t\t\t<form name='RegAuthForm' action=\"#\" onSubmit = {async (e) => { await authorizationHandller(e); /*console.log(123123, loggedUser);  settest(loggedUser);*/}} className='RegAuthForm'>\n\t\t\t\t\t\t\t\t<label>Логин: <br/>\n\t\t\t\t\t\t\t\t\t<input name='login' type='text' placeholder=\"Логин\" required/>\n\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t{ isRegisterWnindow && (\n\t\t\t\t\t\t\t\t\t\t<label> Email: <br/>\n\t\t\t\t\t\t\t\t\t\t\t<input name='email' type='email' placeholder=\"Еmail\" required/>\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t<label>Пароль: <br/>\n\t\t\t\t\t\t\t\t<input name='password' type='text' placeholder=\"Пароль\" required/>\n\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t<div className='RegAuth-Controls'>\n\t\t\t\t\t\t\t\t\t<button type='submit' >\n\t\t\t\t\t\t\t\t\t\t{isRegisterWnindow ? 'Регистрация' : 'Вход'}\n\t\t\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t\t\t<button id='Close' onClick={(e) => closeModalHandler(e)}>Отмена</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n\t)\n}\n\nAutorization.propTypes = {\n\twindowName: PropTypes.string.isRequired,\n\tisRegisterWnindow: PropTypes.bool.isRequired\n}\nexport default Autorization;\n\n","async function updateUserOnServer(field, updateValue, token, path) {\n\tconst localToken = localStorage.getItem(token);\n\tlet statuts =false;\n\tlet user = {};\n\tlet statusCode = 401;\n\tlet message= 'Отсутствует токен сессии';\n\tif (localToken){\n\tconst requestOptions = {\n\t\tmethod: 'PUT',\n\t\theaders:{\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\ttoken: localToken,\n\t\t\tfield: field,\n\t\t\tupdateValue: updateValue,\n\t})};\n\n\tconst response = await fetch(path, requestOptions);\n\tconst result = await response.json();\n\n\tstatuts = result.status;\n\tuser  = result.user;\n\tstatusCode = response.status;\n\tmessage = response.status === 200 ? '' : result.message;\n\n\t}\n\treturn  { statuts, user, statusCode, message}\n};\n\nasync function logOut(token, currentUSer, path, setIsUserLogedCallback, setloggedUserCallback) {\n\tlocalStorage.removeItem(token);\n\tconst requestOptions = {\n\t\tmethod: 'DELETE',\n\t\theaders:{\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tlogin: currentUSer.login,\n\t\t})\n\t}\n\n\tconst request = await fetch(path, requestOptions);\n\tconst result = await request.json();\n\n\tif (result.status){\n\t\tsetIsUserLogedCallback(false);\n\t\tsetloggedUserCallback({});\n\t}\n}\n\nexport {\n\tupdateUserOnServer,\n\tlogOut,\n}","export default __webpack_public_path__ + \"static/media/default.avatar.d5c02d75.png\";","import React from 'react'\nimport  {sessionToken, updateUserPath, logOutPath} from '../../Const'\nimport { updateUserOnServer } from '../../../functions/ServerFunctions'\nimport Context from '../../../GlobalContext'\nimport defaultAvatar from '../../../img/default.avatar.png'\nimport { logOut} from '../../../functions/ServerFunctions'\n\nfunction UserInfo() {\n\tlet {loggedUser ,setisUserLoged, setloggedUser } = React.useContext(Context);\n\tconst [imgSrc, setImgSrc] = React.useState(loggedUser.avatar || defaultAvatar);\n\n\tasync function setAvatarhandler(e) {\n\t\tconst file = document.getElementById('setavatar').files[0];\n\t\tconsole.log(document.getElementById('setavatar').files);\n\t\tconst LIMIT_AVATAR_SIZE = 0.04;\n\t\tif (file) {\n\t\t\tif ( (file.size / 1024 /1024) > LIMIT_AVATAR_SIZE) {\n\t\t\t\talert(`Объем файла превышает ${LIMIT_AVATAR_SIZE} мб, выберите подходящий файл`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.onload = async () => {\n\t\t\t\tconst {statuts, user, statusCode, message} = await updateUserOnServer('avatar', reader.result, sessionToken, updateUserPath);\n\n\t\t\t\tif (statusCode === 200) {\n\t\t\t\t\tsetloggedUser(user)\n\t\t\t\t\tsetImgSrc(reader.result);\n\t\t\t\t} else if(statusCode === 500){\n\t\t\t\t\talert(message);\n\t\t\t\t} else {\n\t\t\t\t\talert(`${message} Будет выполнен выход из профиля`);\n\t\t\t\t\tlogOut(sessionToken, loggedUser, logOutPath, setisUserLoged, setloggedUser)\n\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.readAsDataURL(file);\n\t\t}\n\t}\n\n\treturn(\n\t\t<React.Fragment>\n\t\t\t<div className='user-info-avatar'>\n\t\t\t\t<img src={imgSrc} alt='NotLoaded' className='avatarImg'></img>\n\t\t\t\t<label >Выбор аватара:\n\t\t\t\t\t<input name='avatarFile' id='setavatar' type='file' accept='image/png' placeholder='' title='Выберите картинку .PNG размером до 40кб в качестве аватара' onChange = { (e) => setAvatarhandler(e)}/>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default UserInfo;","import React from 'react'\n\nfunction Statistic({statName, statValue}) {\n\n\treturn(\n\t\t<React.Fragment>\n\t\t\t<div>\n\t\t\t\t<p>{statName}: {statValue}</p>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default Statistic;","import React from 'react';\nimport UserAvatar from './UserWindowComponents/userAvatar'\nimport  { sessionToken, logOutPath } from '../Const'\nimport Context from '../../GlobalContext'\nimport Statistic from './UserWindowComponents/Statistic'\nimport {logOut} from '../../functions/ServerFunctions'\n\n\nconst DEFAULT_MESSAGE = 'Личный кабинет'\n\nfunction UserWindow() {\n\tfunction getStatistic(currentUser) {\n\t\tconst totalAnswers = currentUser.rightAnswers + currentUser.wrongAnswers;\n\n\t\tfunction calcPercentOfAnswers(numbOfAnswers){\n\t\t\treturn numbOfAnswers !== 0 &&  totalAnswers !== 0? +((numbOfAnswers / totalAnswers) * 100).toFixed(2) : 0;\n\t\t}\n\n\t\tconst arrOfStatistic = [\n\t\t\t{name: 'Всего ответов', value: totalAnswers},\n\t\t\t{name: 'Верных ответов, кол-во', value: currentUser.rightAnswers},\n\t\t\t{name: 'Неверных ответов, кол-во', value: currentUser.wrongAnswers},\n\t\t\t{name: 'Верных ответов, %', value: calcPercentOfAnswers(currentUser.rightAnswers)},\n\t\t\t{name: 'Неверных ответов, %', value: calcPercentOfAnswers(currentUser.wrongAnswers)},\n\t\t]\n\n\t\treturn arrOfStatistic;\n\t}\n\n\tconst [isOpen, setIsOpen] = React.useState(false);\n\tlet {loggedUser ,setisUserLoged, setloggedUser} = React.useContext(Context);\n\tconst [arrOfStats, setArrOfStats] = React.useState([])\n\n\tReact.useEffect(() => {\n\t\tsetArrOfStats(getStatistic(loggedUser));\n\t}, [loggedUser])\n\n\tconst closeModalHandler = (e) => {\n\t\tif (e === undefined){\n\t\t\tsetIsOpen(false);\n\t\t} else {\n\t\t\t(e.target === document.querySelector('.modal') && setIsOpen(false));\n\t\t\t(e.target === document.querySelector('#Close') && setIsOpen(false));\n\t\t}\n\t}\n\n\treturn(\n\t\t<React.Fragment>\n        <li onClick={() => setIsOpen(true)} > Личный кабинет: {loggedUser.login} </li>\n\n        {isOpen && (\n          <div className='modal' onClick ={(e)=> closeModalHandler(e) } >\n            <div className='modal-body-user'>\n\t\t\t\t\t\t\t<div className='user-title'>\n\t\t\t\t\t\t\t\t<h2> {`${DEFAULT_MESSAGE}: ${loggedUser.login}`} </h2>\n\t\t\t\t\t\t\t\t<button id='Close' onClick={(e) => closeModalHandler(e)}>Вернуться к игре </button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='user-info'>\n\t\t\t\t\t\t\t\t<UserAvatar/>\n\t\t\t\t\t\t\t\t<div className='user-info-detail' >\n\t\t\t\t\t\t\t\t\t{arrOfStats.map((stat) => <Statistic statName={stat.name} statValue={stat.value} key={stat.name}/>)}\n\t\t\t\t\t\t\t\t\t{/* <button type='button' onClick={() => setArrOfStats(['побед', 'поражений', 'соотношение', 'test'])}> test stats</button> */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button id='LogOut' onClick={(e) => logOut(sessionToken, loggedUser, logOutPath, setisUserLoged, setloggedUser)}>Выйти из профиля</button>\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n\t)\n}\n\nexport default UserWindow;\n\n","import React from 'react'\nimport Autorization from '../Modals/Autorization'\nimport UserWindow from '../Modals/UserWindow'\nimport Context from '../../GlobalContext'\n\nfunction Navbar() {\n\tconst NAVBAR = 'NAVBAR';\n//\tconst [userLogged, setUserLogged] = React.useState(false)// todo check login state whenpage is loaded\n\tlet { isUserLoged } = React.useContext(Context);\n\n\treturn(\n\t\t<nav>\n\t\t\t<ul className={NAVBAR}>\n\t\t\t\t{!isUserLoged &&\n\t\t\t\t\t(<React.Fragment>\n\t\t\t\t\t\t<Autorization windowName={'Вход'} isRegisterWnindow={false} />\n\t\t\t\t\t\t<Autorization windowName={'Регистрация'} isRegisterWnindow={true}/>\n\t\t\t\t\t</React.Fragment>)\n\t\t\t\t}\n\n\t\t\t\t{isUserLoged && (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<UserWindow />\n\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</nav>\n\t)\n}\n\nexport default Navbar","import React from 'react';\r\nimport Context from '../../GlobalContext'\r\n\r\nfunction Question({question}) {\r\n\tconst { handler } = React.useContext(Context)\r\n\tlet price = question.price;\r\n    if(question.played === true) {\r\n        price = '';\r\n    }\r\n    return (\r\n        <div className=\"question\" onClick={() => handler(question)}>{price}</div>\r\n    )\r\n}\r\n\r\nexport default Question;","import React from 'react';\r\nimport Question from \"./Question\";\r\n\r\nfunction Topic({topic}) {\r\n\treturn (\r\n        <div className=\"topic\">\r\n            <div className=\"topic-name\">{topic.topicName}</div>\r\n            {topic.topicQuestions.map((question) => {\r\n\t\t\t\t\t\t\t\tquestion.topicName = topic.topicName;\r\n                return < Question question={question} key={`${topic.topicName}${question.price}`}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topic;","import React from 'react';\r\nimport Topic from \"./Topic\";\r\nimport Context from '../../GlobalContext'\r\nfunction QuestionsSection() {\r\n\tconst { topics } = React.useContext(Context)\r\n    const { tour } = React.useContext(Context);\r\n\r\n\treturn (\r\n        <div className=\"questions-section\">\r\n            <div className=\"round-number\">{`Раунд ${tour}`}</div>\r\n            <div className=\"questions-table\">\r\n                {topics.map((topic) => {\r\n                    return < Topic topic={topic} key={`${topic.topicName}`} />\r\n                })}\r\n            </div>\r\n            <div className=\"question-text hidden\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionsSection;","import React from 'react';\r\nimport QuestionsSection from \"../questions/QuestionsSection\";\r\n\r\nfunction GameSection() {\r\n    return (\r\n        <div className=\"game-section\">\r\n            < QuestionsSection  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameSection;","import React from 'react';\r\n\r\nfunction Avatar({avatarSrc}) {\r\n    return (\r\n        <div className=\"avatar\"><img src={avatarSrc} alt='NotLoaded' className='avatarImg'></img></div>\r\n    )\r\n}\r\n\r\nexport default Avatar;","export default __webpack_public_path__ + \"static/media/HostAvatar.8a8fb51e.jpg\";","import React from 'react';\r\nimport Avatar from \"../../components/Avatar\";\r\nimport HostAvatar from \".././../img/HostAvatar.jpg\";\r\nimport Context from \"../../GlobalContext\";\r\n\r\nfunction HostSection() {\r\n    const {btns} = React.useContext(Context);\r\n\r\n    function readQuestion() {\r\n        console.log('reading');\r\n        const currentQuestion = localStorage.getItem('currentQuestionText');\r\n        speechSynthesis.speak(\r\n            new SpeechSynthesisUtterance(currentQuestion)\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"host-section\">\r\n            <div className=\"host-profile\">\r\n                <button className=\"button button-read-question\" disabled={btns[2].isBlocked}\r\n                onClick={() => readQuestion()}>Озвучить вопрос</button>\r\n                < Avatar avatarSrc={HostAvatar}/>\r\n            </div>\r\n            <div className=\"info hidden\">\r\n                <p className=\"host-text\"></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HostSection;","import React from 'react';\r\nimport Avatar from \"../../components/Avatar\";\r\nimport Context from '../../GlobalContext'\r\nimport defaultAvatar from '../../img/default.avatar.png'\r\n\r\nfunction PlayerIcon() {\r\n\tconst { isUserLoged, loggedUser } = React.useContext(Context);\r\n\tconst [userName, setUserName] = React.useState('');\r\n\tconst [imgSrc, setImgSrc] = React.useState();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetUserName(isUserLoged ? loggedUser.login : 'Anonymous');\r\n\t\tsetImgSrc( isUserLoged && loggedUser.avatar !== null ? loggedUser.avatar : defaultAvatar);\r\n\t}, [isUserLoged, loggedUser])\r\n\r\n\r\n\t// let {loggedUser, isUserLoged } = React.useContext(Context);\r\n\r\n\r\n\tReact.useEffect(() =>{\r\n\r\n\t}, [loggedUser, isUserLoged])\r\n\r\n    return (\r\n        <div className=\"player-icon\">\r\n            <div className=\"player-points\">Очки: 0</div>\r\n            <div>Игрок: {userName}</div>\r\n            < Avatar avatarSrc={imgSrc}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PlayerIcon;","import {\r\n\tgetAllTopicsPath,\r\n\tgetTopicByNamePath,\r\n\tinsertArrayOfTopicsPath,\r\n\tdeleteTopicByNamePath,\r\n} from '../components/Const';\r\n\r\nasync function getAllTopics() {\r\n\t// возвращает массив объектов -тем\r\n\ttry {\r\n\t\tconst request = await fetch(getAllTopicsPath);\r\n\t\tif (!request.ok) {\r\n\t\t\tthrow new Error(`Запрос всех тем завершился с кодом ${request.status}`)\r\n\t\t}\r\n\r\n\t\tconst response = await request.json();\r\n\r\n\t\treturn response;\r\n\r\n\t} catch (err) {\r\n\t\talert(err.message);\r\n\t}\r\n}\r\n\r\nasync function getTopicByName(topicName) {\r\n\ttry {\r\n\t\tconst request = await fetch(`${getTopicByNamePath}/${topicName}`);\r\n\r\n\t\tif (!request.ok) {\r\n\t\t\tthrow new Error(`Запрос темы c фильтром по наименованию завершился с кодом ${request.status}`)\r\n\t\t}\r\n\r\n\t\tconst response = await request.json();\r\n\r\n\t\treturn response;\r\n\r\n\t} catch (err) {\r\n\t\talert(err.message);\r\n\t}\r\n}\r\n\r\nasync function insertArrayOfTopics(arrayOfTopics) {\r\n\t/*\r\n\tпринимает массив объектов, например массив с одним объектом:\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\ttopicName: string;\r\n\t\t\t\ttopicQuestions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprice: number,\r\n\t\t\t\t\t\tquestion: string,\r\n\t\t\t\t\t\tanswers: string,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t]\r\n\t*/\r\n\ttry{\r\n\t\tconst requestOptions = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders:{\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(arrayOfTopics)\r\n\t\t}\r\n\t\tconst request = await fetch(insertArrayOfTopicsPath,requestOptions)\r\n\r\n\t\tif (!request.status) {\r\n\t\t\tthrow new Error(`Запрос на вставку массива тем завершился с кодом ${request.status}`)\r\n\t\t}\r\n\r\n\t\tconst { insertedTopics, rejectedTopics } = await request.json();\r\n\r\n\t\treturn { insertedTopics, rejectedTopics };\r\n\t} catch (err) {\r\n\talert(err.message);\r\n\t}\r\n}\r\n\r\nasync function deleteTopicByName(topicName) {\r\n\ttry {\r\n\t\tconst request = await fetch(`${deleteTopicByNamePath}/${topicName}`, {method: 'DELETE'});\r\n\r\n\t\tif (!request.ok) {\r\n\t\t\tthrow new Error(`Удаление темы c фильтром по наименованию завершился с кодом ${request.status}`)\r\n\t\t}\r\n\r\n\t\tconst response = await request.json();\r\n\t\t// возвращает 1 если что-то было удалено.\r\n\t\treturn response;\r\n\r\n\t} catch (err) {\r\n\t\talert(err.message);\r\n\t}\r\n}\r\n\r\nconst usedTopics = [];\r\nasync function getRoundRandomTopics() {\r\n\tconst listOfTopics = await getAllTopics();\r\n\tconst numberOfTopics = listOfTopics.length;\r\n\tconst NUMBER_OF_TOPICS_IN_ROUND = 6;\r\n\r\n\tfunction getRandomIndexNotInArr(arr) {\r\n\t\t// возвращает псевдослучайный индекс не существующий в массиве из параметра (чаще всего массив индексов для использования в результирующем массиве тем)\r\n\t\tconst randomIndex = Math.floor(Math.random() * Math.floor(numberOfTopics));\r\n\t\t// console.log(arr, randomIndex);\r\n\t\treturn arr.find( (usedIndex) => usedIndex === randomIndex) ? getRandomIndexNotInArr(arr) : randomIndex;\r\n\t}\r\n\r\n\tfunction fillTopicsToUse(extArr) {\r\n\t\tconst resultArr = extArr;\r\n\t\tconst randomIndex = getRandomIndexNotInArr(resultArr);\r\n\t\tconst currentTopicName = listOfTopics[randomIndex].topicName;\r\n\r\n\t\t// console.log(resultArr, randomIndex,usedTopics.length, usedTopics, currentTopicName);\r\n\t\tif ( !(usedTopics.find((usedTopicName) => currentTopicName === usedTopicName)) || (usedTopics.length + 1) >= numberOfTopics) {\r\n\t\t\t// если в списке использованных тем не найдена текущая или список использованных тем переполнен, то используем текущую\r\n\t\t\tresultArr.push(randomIndex);\r\n\t\t\tif (!(usedTopics.length + 1) >= numberOfTopics) {\r\n\t\t\t\tusedTopics.push(currentTopicName);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log(`${usedTopics.length} ${ !(usedTopics.find((usedTopicName) => currentTopicName === usedTopicName))} ${(usedTopics.length + 1) >= numberOfTopics}`)\r\n\t\t\t// resultArr.push(randomIndex);\r\n\t\t}\r\n\r\n\t\treturn resultArr.length < NUMBER_OF_TOPICS_IN_ROUND ? fillTopicsToUse(resultArr) : resultArr;\r\n\t}\r\n\r\n\tconst topicsToUse = fillTopicsToUse([]);\r\n\r\n\tconst result = topicsToUse.map((indexOfTopic) => {\r\n\t\tconst topicToUse = listOfTopics[indexOfTopic];\r\n\t\treturn {\r\n\t\ttopicName: topicToUse.topicName,\r\n\t\ttopicQuestions: [...topicToUse.topicQuestions]\r\n\t\t}\r\n\t});\r\n\r\n\treturn result;\r\n}\r\n\r\n\r\n // getRoundRandomTopics().then(result => {console.log(result); console.log(`usedTopics: ${usedTopics}`);});\r\n\r\n // setTimeout(() => getRoundRandomTopics().then(result => {console.log(result); console.log(`usedTopics: ${usedTopics}`);}), 3000);\r\nconst Topics = [\r\n    {\r\n        topicName: 'topic 1',\r\n        topicQuestions: [\r\n            {\r\n                price: 100,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 200,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 300,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 400,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 500,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        topicName: 'topic 2',\r\n        topicQuestions: [\r\n            {\r\n                price: 100,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 200,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 300,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 400,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 500,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        topicName: 'topic 3',\r\n        topicQuestions: [\r\n            {\r\n                price: 100,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 200,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 300,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 400,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 500,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        topicName: 'topic 4',\r\n        topicQuestions: [\r\n            {\r\n                price: 100,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 200,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 300,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 400,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 500,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        topicName: 'topic 5',\r\n        topicQuestions: [\r\n            {\r\n                price: 100,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 200,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 300,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 400,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 500,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        topicName: 'topic 6',\r\n        topicQuestions: [\r\n            {\r\n                price: 100,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 200,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 300,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 400,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n            {\r\n                price: 500,\r\n                question: 'abc',\r\n                answers: 'cba',\r\n                played: false,\r\n            },\r\n        ]\r\n    },\r\n]\r\n\r\n\r\nexport default Topics;\r\nexport {\r\n\tgetAllTopics,\r\n\tgetTopicByName,\r\n\tinsertArrayOfTopics,\r\n\tdeleteTopicByName,\r\n\tgetRoundRandomTopics,\r\n}\r\n","function show(element) {\r\n    element.classList.remove('hidden');\r\n}\r\n\r\nexport default show;","function changeHostText(text) {\r\n    const hostText = document.querySelector('.host-text');\r\n    hostText.innerHTML = text;\r\n}\r\n\r\nexport default changeHostText;","import React from'react';\r\nimport show from \"../../../functions/show\";\r\nimport changeHostText from \"../../../functions/changeHostText\";\r\nimport Context from \"../../../GlobalContext\";\r\n\r\nfunction showSubmitArea() {\r\n    const textArea = document.querySelector('.answer-text');\r\n    const submitBtn = document.querySelector('.submit-button');\r\n    show(textArea);\r\n    show(submitBtn);\r\n    changeHostText('Ваш ответ?');\r\n}\r\n\r\nfunction AnswerButton() {\r\n    const {btns} = React.useContext(Context);\r\n    return (<button className=\"button answer-button\" disabled={btns[0].isBlocked}\r\n                    onClick={() => showSubmitArea()}>\r\n        Ответить</button>);\r\n}\r\n\r\nexport default AnswerButton;","function hide(element) {\r\n    element.classList.add('hidden');\r\n}\r\n\r\nexport default hide;","import React from'react';\r\nimport hide from \"../../../functions/hide\";\r\nimport show from \"../../../functions/show\";\r\nimport Context from \"../../../GlobalContext\";\r\n\r\n\r\nfunction SkipQuestionButton() {\r\n    const {btns, setBtns} = React.useContext(Context);\r\n\r\n    function skipQuestion() {\r\n        const table = document.querySelector('.questions-table');\r\n        const questionText = document.querySelector('.question-text');\r\n\t\t\t\tconst info = document.querySelector('.info');\r\n\t\t\t\tconst textArea = document.querySelector('.answer-text');\r\n    \t\tconst submitBtn = document.querySelector('.submit-button');\r\n    \t\thide(textArea);\r\n    \t\thide(submitBtn);\r\n        hide(info);\r\n        hide(questionText);\r\n        show(table);\r\n        setBtns(\r\n            btns.map((btn) => {\r\n                btn.isBlocked = !btn.isBlocked;\r\n                return btn;\r\n            })\r\n        )\r\n    }\r\n\r\n    return (<button className=\"button skip-button\" disabled={btns[0].isBlocked}\r\n                    onClick={() => skipQuestion()}>\r\n        Пропустить вопрос</button>);\r\n}\r\n\r\nexport default SkipQuestionButton;","import  {sessionToken, updateUserPath, logOutPath} from '../components/Const'\r\nimport { updateUserOnServer, logOut } from './ServerFunctions'\r\n\r\n\r\nfunction addToStats(answer, currentUser, setloggedUser, setisUserLoged) {\r\n\tupdateUserOnServer(\r\n\t\t(answer ? 'rightAnswers': 'wrongAnswers'),\r\n\t\t(answer ? currentUser.rightAnswers : currentUser.wrongAnswers) + 1,\r\n\t\tsessionToken,\r\n\t\tupdateUserPath)\r\n\t\t.then(({ statuts, user, statusCode, message }) => {\r\n\t\t\tif (statusCode === 200) {\r\n\t\t\t\t\tsetloggedUser(user)\r\n\t\t\t\t} else if(statusCode === 500){\r\n\t\t\t\t\talert(message);\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(`${message} Будет выполнен выход из профиля`);\r\n\t\t\t\t\tlogOut(sessionToken, currentUser, logOutPath, setisUserLoged, setloggedUser)\r\n\t\t\t\t}\r\n\t\t});\r\n}\r\n\r\nexport default addToStats;","function compareAnswers(string1, string2) {\r\n    function toLine(string) {\r\n        return string.trim().toLowerCase().split(' ').join('');\r\n    }\r\n    const answer = toLine(string1);\r\n    const rightAnswer = toLine(string2);\r\n\r\n    return answer.includes(rightAnswer) || rightAnswer.includes(answer);\r\n}\r\n\r\nexport default compareAnswers;","export default __webpack_public_path__ + \"static/media/100-k-1-wrong-answer.410bfa26.mp3\";","export default __webpack_public_path__ + \"static/media/right-answer.33039f0d.mp3\";","function getRandomInt (min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min\r\n}\r\n\r\nexport default getRandomInt;","const RightAnswerPhrases = [\r\n    'Абсолютно верно!', 'Точно!', 'В точку!', 'Вы правы!', 'И это правильный ответ!'\r\n];\r\n\r\nexport default RightAnswerPhrases;","const WrongAnswerPhrases = [\r\n    'Неправильно!', 'Вы ошиблись!', 'Промашка!', 'Это не так!', 'Не угадали!'\r\n];\r\n\r\nexport default WrongAnswerPhrases;","function roundCompleted() {\r\n    if(localStorage.getItem('completedRoundsCounter')) {\r\n        const counter = parseInt(localStorage.getItem('completedRoundsCounter'));\r\n        localStorage.setItem('completedRoundsCounter', `${counter + 1}`);\r\n    } else {\r\n        localStorage.setItem('completedRoundsCounter', '1');\r\n    }\r\n}\r\n\r\nexport default roundCompleted;","function roundSkipped() {\r\n    if(localStorage.getItem('skippedRoundsCounter')) {\r\n        const counter = parseInt(localStorage.getItem('skippedRoundsCounter'));\r\n        localStorage.setItem('skippedRoundsCounter', `${counter + 1}`);\r\n    } else {\r\n        localStorage.setItem('skippedRoundsCounter', '1');\r\n    }\r\n}\r\n\r\nexport default roundSkipped;","import React from 'react';\nimport Context from '../../../GlobalContext'\nimport { getRoundRandomTopics } from '../../../topics/topics'\nimport AnswerButton from \"./answerButton\";\nimport SkipQuestionButton from \"./skipQuestionButton\";\nimport show from \"../../../functions/show\";\nimport hide from \"../../../functions/hide\";\nimport changeHostText from \"../../../functions/changeHostText\";\nimport addToStats from \"../../../functions/addToStats\";\nimport compareAnswers from \"../../../functions/compareAnswers\";\nimport useSound from \"use-sound\";\nimport wrongAnswerSound from \"../../../sounds/100-k-1-wrong-answer.mp3\";\nimport rightAnswerSound from \"../../../sounds/right-answer.mp3\";\nimport getRandomInt from \"../../../functions/getRandomNumber\";\nimport RightAnswerPhrases from \"../../host/rightAnswerPhrases\";\nimport WrongAnswerPhrases from \"../../host/wrongAnswersPhrases\";\nimport roundCompleted from \"../../../functions/roundCompleted\";\nimport roundSkipped from \"../../../functions/roundSkipped\";\n\n\nfunction ButtonsSectionLeft() {\n\tconst { topics, setTopics } = React.useContext(Context);\n\n\tconst {btns, setBtns} = React.useContext(Context);\n\n\tconst { loggedUser, setloggedUser, isUserLoged, setisUserLoged } = React.useContext(Context);\n  const { tour, setTour } = React.useContext(Context);\n\n    const [playWrongAnswerSound] = useSound(wrongAnswerSound);\n    const [playRightAnswerSound] = useSound(rightAnswerSound);\n\n    const table = document.querySelector('.questions-table');\n    const questionText = document.querySelector('.question-text');\n    const info = document.querySelector('.info');\n\n\n    function CheckGuess() {\n        const pointsInfo = document.querySelector('.player-points')\n        let points = parseInt(pointsInfo.innerHTML.slice(6));\n        if(points !== 0) {\n            points = parseInt(localStorage.getItem('currentPoints'));\n        }\n        const answer = document.querySelector('.answer-text').value.trim();\n        const rightAnswer = localStorage.getItem('currentQuestionRightAnswer');\n        const price = parseInt(localStorage.getItem('currentQuestionPrice'), 10);\n        const isRight = compareAnswers(answer, rightAnswer);\n        const randomNumber = getRandomInt(0, RightAnswerPhrases.length);\n        if(isRight === true && answer !== '') {\n            changeHostText(RightAnswerPhrases[randomNumber]);\n            points += price;\n            (isUserLoged && addToStats(true, loggedUser, setloggedUser, setisUserLoged));\n            playRightAnswerSound();\n        } else {\n            points -= price;\n            changeHostText(`${WrongAnswerPhrases[randomNumber]}\n            Минус ${price} баллов!\n        Правильный ответ: ${rightAnswer}`);\n        (isUserLoged && addToStats(false, loggedUser, setloggedUser, setisUserLoged));\n            playWrongAnswerSound();\n        }\n        show(table);\n        questionText.innerHTML = '';\n        hide(questionText);\n        const textArea = document.querySelector('.answer-text');\n        const submitBtn = document.querySelector('.submit-button');\n        hide(textArea);\n        textArea.value = '';\n        hide(submitBtn);\n        localStorage.setItem('currentPoints', points.toString());\n        pointsInfo.innerHTML = `Очки: ${points}`;\n        setBtns(\n            btns.map((btn) => {\n                btn.isBlocked = !btn.isBlocked;\n                return btn;\n            })\n        )\n    }\n\n    function updateTopics() {\n        const matrix = topics.map((topic) => topic.topicQuestions\n            .map((question) => question.played));\n        const areAllPlayedArr = matrix.reduce((total, value) => total.concat(value));\n        const areAllPlayed =  areAllPlayedArr.every((item) => item === true);\n        if(areAllPlayed === true) {\n            roundCompleted();\n        } else {\n            roundSkipped();\n        }\n        getRoundRandomTopics().then(res => setTopics(res));\n        hide(questionText);\n        show(table);\n        hide(info);\n        setTour(\n            (tour) => {\n                return tour + 1;\n            }\n        )\n        setBtns(\n            btns.map((btn) => {\n                btn.isBlocked = true; // !btn.isBlocked;\n                return btn;\n            })\n        )\n    }\n\n\treturn (\n        <div className=\"buttons-section-left\">\n            < AnswerButton />\n            <textarea className=\"answer-text hidden\"></textarea>\n            <button className=\"button submit-button hidden\"\n                    onClick={() => CheckGuess()}>\n                Подтвердить ответ</button>\n            < SkipQuestionButton />\n            <button type='button' className=\"button next-round-button\"\n                    onClick={() => updateTopics()}> Сменить тур</button>\n        </div>\n    )\n}\n\nexport default ButtonsSectionLeft;","import React from 'react';\r\nimport ButtonsSectionLeft from \"./buttonsSectionLeft\";\r\nimport ButtonSectionRight from \"./buttonsSectionRight\";\r\n\r\nfunction ButtonsSection() {\r\n    return(\r\n        <div className=\"buttons-section\">\r\n            < ButtonsSectionLeft />\r\n            {/* < ButtonSectionRight /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonsSection;","import React from 'react';\r\nimport PlayerIcon from \"./PlayerIcon\";\r\nimport ButtonsSection from \"./buttons/buttonsSection\";\r\n\r\nfunction PlayersSection({points}) {\r\n    return (\r\n        <div className=\"players-section\">\r\n            < PlayerIcon points={points}/>\r\n            < ButtonsSection />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayersSection;","import React from 'react';\r\nimport HostSection from \"../host/HostSection\";\r\nimport PlayersSection from \"../players/PlayersSection\";\r\n\r\nfunction BottomSection() {\r\n    return(\r\n        <div className=\"bottom-section\">\r\n            < HostSection />\r\n            < PlayersSection />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BottomSection;","import React from 'react'\nimport GameSection from \"./GameSection/GameSection\";\nimport BottomSection from \"./bottomSection/BottomSection\";\n\nexport default function GameField() {\n\tconst GAME_FIELD_WRAPPER = 'GAME_FIELD_WRAPPER';\n\treturn(\n\t\t<div className={GAME_FIELD_WRAPPER}>\n      \t\t< GameSection />\n      \t\t< BottomSection />\n\t\t</div>\n\t)\n}","const ButtonsBlocked = [\r\n    {\r\n        buttonName: 'answerButton',\r\n        isBlocked: true,\r\n    },\r\n    {\r\n        buttonName: 'skipButton',\r\n        isBlocked: true,\r\n    },\r\n    {\r\n        buttonName: 'readButton',\r\n        isBlocked: true,\r\n    },\r\n]\r\n\r\nexport default ButtonsBlocked;\r\n","export default __webpack_public_path__ + \"static/media/github.8eebd666.png\";","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import React from \"react\";\nimport gitLogo from '../img/github.png'\nimport RSlogo from '../img/rs_school_js.svg'\n\nfunction Footer() {\n\treturn(\n\t\t<React.Fragment>\n\t\t\t<footer>\n\t\t\t\t\t<a href='https://github.com/g0rdeich'><div className='footerElement'> <img className='gitLogo' src={gitLogo} alt='gitLogo'></img> Alex Gordeev</div></a>\n\t\t\t\t\t<a href='https://github.com/thrvrce'><div className='footerElement'> <img className='gitLogo' src={gitLogo} alt='gitLogo'></img> Victor Avdeev</div></a>\n\t\t\t\t\t<a href='https://rs.school/js/'><div className='footerElement'> <img className='gitLogo' src={RSlogo} alt='RSlogo'></img> RS School</div></a>\n\t\t\t\t\t<div className='footerElement'> 2021 год</div>\n\t\t\t</footer>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default Footer;","function nullifyItems() {\r\n    if(localStorage.getItem('currentPoints')) {\r\n        localStorage.setItem('currentPoints', '0');\r\n    }\r\n    if(localStorage.getItem('completedRoundsCounter')) {\r\n        localStorage.setItem('completedRoundsCounter', '0');\r\n    }\r\n    if(localStorage.getItem('skippedRoundsCounter')) {\r\n        localStorage.setItem('skippedRoundsCounter', '0');\r\n    }\r\n}\r\n\r\nexport default nullifyItems;","import React from 'react';\nimport Navbar from \"./components/Navbar/navbar\";\nimport GameField from './gamefield/GameField'\nimport Topics, { getRoundRandomTopics } from \"./topics/topics\";\nimport hide from \"./functions/hide\";\nimport show from \"./functions/show\";\nimport changeHostText from \"./functions/changeHostText\";\nimport GlobalContext from './GlobalContext'\nimport  {sessionToken, checkSessionPath, checkSessionInterval} from './components/Const';\nimport ButtonsBlocked from \"./gamefield/players/buttons/buttonsBlocked\";\nimport Footer from \"./components/Footer\";\nimport nullifyItems from \"./functions/nullifyItems\";\n\nfunction App() {\n\n\tconst [isUserLoged, setisUserLoged] = React.useState(false);\n\tconst [topics, setTopics] = React.useState(Topics)\n\tlet [loggedUser, setloggedUser] = React.useState({});\n\n  const [isActiveMenu, setisActiveMenu] = React.useState(false);\n\tconst [tour, setTour] = React.useState(1);\n\tconst [btns, setBtns] = React.useState(ButtonsBlocked);\n\n\n\tReact.useEffect(() =>{\n\t\tnullifyItems();\n\t\tchecLocalToken().then (res =>  setisUserLoged(res));\n\t\tgetRoundRandomTopics().then(res => setTopics(res));\n\t\tsetInterval(() => {\n\t\t\tchecLocalToken().then (res =>  setisUserLoged(res));\n\t\t}, checkSessionInterval);\n\t }, []);\n\n\t async function checLocalToken() {\n\t\tconst localToken = localStorage.getItem(sessionToken);\n\n\t\tif (localToken){\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders:{\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\ttoken: localToken,\n\t\t\t\t})\n\t\t\t};\n\n\t\t\tconst response = await fetch(checkSessionPath, requestOptions);\n\t\t\tconst result = await response.json();\n\n\t\t\tif (result.status){\n\t\t\t\tsetloggedUser(result.user);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\talert(result.message);\n\t\t\tlocalStorage.removeItem(sessionToken);\n\t\t\tsetloggedUser({});\n\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tsetloggedUser({});\n\t\treturn false;\n\t}\n\n\tfunction handler(a) {\n\t\tif(a.played === true) {\n\t\t\treturn;\n\t\t}\n\t\tconst newHostText = `${a.topicName} ${a.price}`;\n\t\tconst info = document.querySelector('.info');\n\t\tshow(info);\n\t\tchangeHostText(newHostText);\n\t\tsetTopics(\n\t\t\ttopics.map((topic) => {\n\t\t\t\ta.played = true;\n\t\t\t\treturn topic;\n\t\t\t}))\n\t\tconst table = document.querySelector('.questions-table');\n\t\tconst questionText = document.querySelector('.question-text');\n\t\thide(table);\n\t\tconst currentQuestionText = a.question;\n\t\tquestionText.innerHTML = currentQuestionText;\n\t\tlocalStorage.setItem('currentQuestionText', currentQuestionText);\n\t\tshow(questionText);\n\t\tconst currentQuestionPrice = a.price;\n\t\tlocalStorage.setItem('currentQuestionPrice', currentQuestionPrice);\n\t\tconst currentQuestionRightAnswer = a.answers;\n\t\tlocalStorage.setItem('currentQuestionRightAnswer', currentQuestionRightAnswer);\n\t\tsetBtns(\n\t\t\tbtns.map((btn) => {\n\t\t\t\tbtn.isBlocked = !btn.isBlocked;\n\t\t\t\treturn btn;\n\t\t\t})\n\t\t)\n\t}\n\n\treturn (\n\n    <GlobalContext.Provider value= {{ isUserLoged, loggedUser,setloggedUser, setisUserLoged, handler, topics,\n\t\tsetTopics, btns, setBtns, tour, setTour}} >\n\n\t\t<div className=\"wrapper\">\n      <Navbar />\n\t\t\t<GameField />\n\t\t\t<Footer/>\n\t\t\t</div>\n\t\t</GlobalContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}